name: Android CI

# Trigger this workflow on push or pull request to main or feature branches
on:
  push:
    branches:
     - main
  pull_request:
    branches:
      - main
      - 'feature/**'
  issue_comment:
    types: [created]

jobs:
  build:
    if: github.event.issue.pull_request != null && contains(github.event.comment.body, '@pr_build')

    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the code
      - name: Checkout code
        uses: actions/checkout@v4


      # Step 2: Set up JDK 17 (you can change this to the version your project uses)
      - uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'  # Choose your preferred Java distribution, e.g., temurin, zulu
          java-package: 'jdk'
          check-latest: false
          server-id: github
          server-username: ${{ github.actor }}
          server-password: ${{ secrets.GITHUB_TOKEN }}
          overwrite-settings: true
        # Specify your required Java version

      # Step 3: Cache Gradle dependencies to speed up the build
      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-

      # Step 4: Set up Android SDK
      - name: Set up Android SDK
        uses: android-actions/setup-android@v2
        with:
          api-level: 31  # Specify your API level here
          build-tools: 31.0.0  # Specify your build tools version here
          components: build-tools;31.0.0

      # Step 5: Build the project
      - name: Build with Gradle
        run: ./gradlew assembleDebug

      # Step 6: Run unit tests
      - name: Run unit tests
        run: ./gradlew testDebugUnitTest

      # Optional: Upload build artifacts for download (e.g., APK files)
      - name: Upload APK
        if: success()
        uses: actions/upload-artifact@v3
        with:
          name: app-debug.apk
          path: app/build/outputs/apk/debug/app-debug.apk
